<style lang="less">
  @primary-color: #ff2a48;

  .search-page {
    height: 100%;
    .product-list {
      height: 100%;
    }
    .no-more{
      color: #666;
      font-size: 30rpx;
      text-align: center;
      padding: 20rpx 0;
    }
  }
  .search {
    padding: 20rpx;
    border-bottom: 1rpx solid #e8e8ed;
    .input-view {
      background-color: #e8e8ed;
      width: 570rpx;
      height: 60rpx;
      display: inline-block;
      font-size: 30rpx;
      border-radius: 30rpx;
      padding: 0 10rpx;
      position: relative;
      .icon {
        width: 40rpx;
        position: relative;
        top: 4rpx;
        left: 4rpx;
      }
      .input {
        width: 520rpx;
        display: inline-block;
        margin-top: 8rpx;
      }
      .clear-input {
        display: inline-block;
        width: 35rpx;
        height: 35rpx;
        overflow: hidden;
        position: absolute;
        right: 5rpx;
        top: 5rpx;
        color: #fff;
        border-radius: 50%;
        background-color: #bbb;
        z-index: 10;
        margin: 10rpx;
        &::before,
        &::after {
          position: absolute;
          content: '';
          top: 50%;
          left: 10%;
          background-color: #fff;
          width: 80%;
          height: 1rpx;
        }
        &::before {
          transform: rotate(45deg);
        }
        &::after {
          transform: rotate(-45deg);
        }
      }
    }
    .button {
      width: 100rpx;
      height: 60rpx;
      display: inline-block;
      margin-left: 20rpx;
      font-size: 26rpx;
      padding: 0;
    }

  }

  .search-key {
    padding: 30rpx 20rpx;
    .key-title {
      font-size: 30rpx;
      color: #333;
    }
    .key-clear {
      float: right;
      font-size: 24rpx;
      color: @primary-color;
    }
    .key-panel {
      margin: 30rpx 0 70rpx;

    }
    .key {
      background-color: #e8e8ed;
      color: #333;
      font-size: 26rpx;
      padding: 10rpx 20rpx;
      border-radius: 4rpx;
      margin-right: 10rpx;
      margin-bottom: 10rpx;
      display: inline-block;
    }
  }
</style>
<template>
  <view class="container search-page">
    <view class="search">
      <form bindsubmit="onSubmit">
        <view class="input-view">
          <icon class="icon" type="search" size="14" color="#b2b2b2"/>
          <input class="input" name="keyword" placeholder="输入关键词搜索商品" bindconfirm="onConfirm" value="{{keyword}}" focus/>
          <text class="clear-input" @tap="clearInput" wx:if="{{keyword.length>0}}"></text>
        </view>
        <button class="button" formType="submit">搜索</button>
      </form>
    </view>
    <view class="search-key" wx:if="{{!isShowList}}">
      <text class="key-title">历史搜索</text>
      <text class="key-clear" @tap="clearHistory">清除记录</text>
      <view class="key-panel">
        <repeat for="{{historyList}}" key="index" index="index" item="item">
          <view class="key" @tap="clickSearch" data-value="{{item}}">{{item}}</view>
        </repeat>
      </view>

      <text class="key-title">热门搜索</text>
      <view class="key-panel">
        <repeat for="{{hotSearchList}}" key="index" index="index" item="item">
          <view class="key" @tap="clickSearch" data-value="{{item}}">{{item}}</view>
        </repeat>
      </view>
    </view>

    <scroll-view scroll-y="true" bindscrolltolower="fetchSearch" class="product-list" wx:if="{{isShowList}}" lower-threshold="100">
      <List :list.sync="productList"></List>
      <view class="no-more">
        {{isBottom?'到底啦，搜搜其他的吧～':'正在加载...'}}
      </view>
    </scroll-view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import List from '../components/product/List'

  import api from '../mixins/api'


  export default class SearchPage extends wepy.page {
    config = {}

    components = {
      List: List,
    }

    data = {
      productList: [], // 搜索结果列表
      historyList: [], // 搜索历史列表
      hotSearchList: [], // 热搜词列表
      isShowList: false, // 是否显示搜索结果
      keyword: '', // 关键词
      offset: 0,
      isBottom: false, // 是否到搜索的最底部
      agentId: '',
      isFetching: false // 是否在搜索中
    }

    computed = {}

    methods = {

      // 点击历史搜索
      clickSearch(e) {
        console.log(e)
        const keyword = e.target.dataset.value
        this.keyword = ''
        this.keyword = keyword
        this.resetList()

        this.searchHistory(keyword)
        this.fetchSearch(keyword)
      },

      // 清除历史记录
      clearHistory() {
        const self = this
        wx.removeStorage({
          key: 'searchHistory',
          success: function (res) {
            console.log(res.data)
            self.historyList = []
            self.$apply()
          }
        })
      },

      clearInput(){
        this.keyword = ''
        this.isShowList = false
      }
    }

    events = {}

    onLoad (option) {
      console.info('搜索页加载完成')
      this.searchHistory()
      this.isShowList = false
      this.resetList()

      // 加载热门词
      wepy.request('https://adbaitai.com/public/1.0/h5/weixin/hot?data=')
        .then(res => {
          const data = res.data.data.hotSearch
          console.log(data)
          this.hotSearchList = data
          this.$apply()
        })

      const self = this

      // 如果是从二维码带agentId进来的则设置 agentId
      if (option.agentId) {
        this.agentId = option.agentId
        wx.setStorage({
          key: 'agentId',
          data: option.agentId
        })
      } else {
        // 如果不是带二维码 则读本地缓存二维码
        wx.getStorage({
          key: 'agentId',
          success: function (res) {
            self.agentId = res.data
          }
        })
      }

    }

    // 分享页面
    onShareAppMessage () {
      let path = 'pages/search'
      if (this.agentId) {
        path += '?agentId=' + this.agentId
      }
      return {
        title: '粉丝专享优惠券',
        path: path,
        success: function(res) {
          console.log('分享成功', res)
        },
        fail: function(res) {
          console.log('分享失败', res)
        }
      }
    }


    // 点击搜索按钮搜索
    onSubmit(e) {
      console.log(e)
      this.keyword = e.detail.value.keyword
      this.resetList()

      this.searchHistory(this.keyword)
      this.fetchSearch()
    }

    // 键盘完成搜索
    onConfirm(e) {
      console.log(e)
      this.keyword = e.detail.value
      this.resetList()

      this.searchHistory(this.keyword)
      this.fetchSearch()
    }

    // 重置搜索结果
    resetList() {
      this.productList = []
      this.offset = 0
      this.isBottom = false
    }

    // 拉取搜索结果
    async fetchSearch() {
      console.log('拉取搜索结果')
      const data = JSON.stringify({
        "keyWord": this.keyword,
        "offset": this.offset,
        "pageSize": 10
      })

      // 如果没有到列表最后一个 且 不在搜索中
      if (!this.isBottom && !this.isFetching) {
        this.isFetching = true
        const res = await api.fetchDetail({}, '/public/1.0/h5/weixin/searchByKeyWord?data=' + encodeURI(data))
        const items = res.data.data.itemsByKeyRes.data
        this.productList = [...this.productList, ...items]
        this.offset += 10
        this.isShowList = true
        if (items.length <= 0) {
          this.isBottom = true
        }
        this.isFetching = false

        this.$apply()
      }
    }

    // 设置搜索历史
    searchHistory (key) {
      const self = this
      if (key) {
        // 如果传入新搜索key 获取缓存中的搜索历史
        // 控制搜索历史在6个并将新的key放在第一个位置
        wx.getStorage({
          key: 'searchHistory',
          success: function (res) {
            const history = res.data

            let newHistory = history.filter(value => value !== key).slice(0, 5)
            newHistory.unshift(key)

            self.historyList = newHistory
            wx.setStorage({
              key: "searchHistory",
              data: newHistory
            })
          },
          fail: function (res) {
            // 如果缓存中没有搜索历史 则将新key设为第一个历史
            wx.setStorage({
              key: "searchHistory",
              data: [key]
            })
          }
        })
      } else {
        // 如果没有key传入 则为加载历史
        wx.getStorage({
          key: 'searchHistory',
          success: function (res) {
            self.historyList = res.data
          }
        })
      }
    }
  }
</script>
