<style lang="less">
  @primary-color: #ff2a48;

  .search-page {
    height: 100%;
    .product-list {
      height: 100%;
    }
    .no-more{
      color: #666;
      font-size: 30rpx;
      text-align: center;
      padding: 20rpx 0;
    }
  }
  .search {
    padding: 20rpx;
    border-bottom: 1rpx solid #e8e8ed;
    .input-view {
      background-color: #e8e8ed;
      width: 570rpx;
      height: 60rpx;
      display: inline-block;
      font-size: 30rpx;
      border-radius: 30rpx;
      padding: 0 10rpx;
      .icon {
        width: 40rpx;
        position: relative;
        top: 4rpx;
        left: 4rpx;
      }
      .input {
        width: 520rpx;
        display: inline-block;
        margin-top: 8rpx;
      }
    }
    .button {
      width: 100rpx;
      height: 60rpx;
      display: inline-block;
      margin-left: 20rpx;
      font-size: 26rpx;
      padding: 0;
    }

  }

  .search-key {
    padding: 30rpx 20rpx;
    .key-title {
      font-size: 30rpx;
      color: #333;
    }
    .key-clear {
      float: right;
      font-size: 24rpx;
      color: @primary-color;
    }
    .key-panel {
      margin: 30rpx 0 70rpx;

    }
    .key {
      background-color: #e8e8ed;
      color: #333;
      font-size: 26rpx;
      padding: 10rpx 20rpx;
      border-radius: 4rpx;
      margin-right: 10rpx;
      margin-bottom: 10rpx;
      display: inline-block;
    }
  }
</style>
<template>
  <view class="container search-page">
    <view class="search">
      <form bindsubmit="onSubmit">
        <view class="input-view">
          <icon class="icon" type="search" size="14" color="#b2b2b2"/>
          <input class="input" name="keyword" placeholder="输入关键词搜索商品" bindconfirm="onSubmit" value="{{keyword}}" focus/>
        </view>
        <button class="button" formType="submit">搜索</button>
      </form>
    </view>
    <view class="search-key" wx:if="{{!isShowList}}">
      <text class="key-title">历史搜索</text>
      <text class="key-clear" @tap="clearHistory">清除记录</text>
      <view class="key-panel">
        <repeat for="{{historyList}}" key="index" index="index" item="item">
          <view class="key" @tap="clickSearch" data-value="{{item}}">{{item}}</view>
        </repeat>
      </view>

      <text class="key-title">热门搜索</text>
      <view class="key-panel">
        <repeat for="{{hotSearchList}}" key="index" index="index" item="item">
          <view class="key" @tap="clickSearch" data-value="{{item}}">{{item}}</view>
        </repeat>
      </view>
    </view>

    <scroll-view scroll-y="true" bindscrolltolower="fetchSearch" class="product-list" wx:if="{{isShowList}}">
      <List :list.sync="productList"></List>
      <view class="no-more">
        {{isBottom?'到底啦，搜搜其他的吧～':'正在加载...'}}
      </view>
    </scroll-view>
  </view>
</template>

<script>
  import wepy from 'wepy'
//  import SearchBar from '../components/search/SearchBar'
  import List from '../components/product/List'

  import api from '../mixins/api'


  export default class SearchPage extends wepy.page {
    config = {}

    components = {
//      SearchBar: SearchBar,
      List: List,
    }

    data = {
      productList: [],
      historyList: [],
      hotSearchList: [],
      isShowList: false,
      keyword: '',
      offset: 0,
      isBottom: false
    }

    computed = {}

    methods = {

      // 点击历史搜索
      clickSearch(e) {
        const keyword = e.target.dataset.value

        this.keyword = keyword
        this.resetList()

        this.searchHistory(keyword)
        this.fetchSearch(keyword)

      },

      // 清除历史记录
      clearHistory() {
        const self = this
        wx.removeStorage({
          key: 'searchHistory',
          success: function (res) {
            console.log(res.data)
            self.searchHistory()
          }
        })
      }
    }

    events = {}

    onLoad () {
      console.info('搜索页加载完成')
      this.searchHistory()
      this.isShowList = false
      this.resetList()

      wepy.request('http://pre.adbaitai.com/public/1.0/h5/weixin/hot?data=')
        .then(res => {
          const data = res.data.data.hotSearch
          console.log(data)
          this.hotSearchList = data
        })
    }

    // 点击搜索按钮搜索
    onSubmit(e) {
      this.keyword = e.detail.value.keyword
      this.resetList()

      this.searchHistory(this.keyword)
      this.fetchSearch()
    },

    // 重置搜索
    resetList() {
      this.productList = []
      this.offset = 0
      this.isBottom = false
    }

    // 拉取搜索结果
    async fetchSearch() {
      console.log('拉取搜索结果')
      const data = JSON.stringify({
        "itemSearchBy": {
          "keyword": this.keyword,
          "offset": this.offset,
          "pageSize": 10
        }
      })

      if (!this.isBottom) {
        const res = await api.fetchDetail({}, 'https://pre.adbaitai.com/1.0/h5/batch/search?appKey=zdnz&data=' + encodeURI(data))
        const items = res.data.data.itemsByKeyRes.data
        this.productList = [...this.productList, ...items]
        this.offset += 10
        this.isShowList = true
        this.$apply();
        console.log(this)
        if (items.length <= 0) {
          this.isBottom = true
        }
      }
    }

    // 设置搜索历史
    searchHistory (key) {
      const self = this
      if (key) {
        wx.getStorage({
          key: 'searchHistory',
          success: function (res) {
            console.log('getStorage success', res.data)
            const history = res.data

            let newHistory = history.filter(value => value !== key).slice(0, 5)
            newHistory.unshift(key)

            self.historyList = newHistory
            wx.setStorage({
              key: "searchHistory",
              data: newHistory
            })
          },
          fail: function (res) {
            console.log('getStorage fail', res.data)
            wx.setStorage({
              key: "searchHistory",
              data: [key]
            })
          }
        })
      } else {
        wx.getStorage({
          key: 'searchHistory',
          success: function (res) {
            self.historyList = res.data
          }
        })
      }
    }
  }
</script>
